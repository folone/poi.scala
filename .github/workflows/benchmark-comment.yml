name: Benchmark Comment

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  benchmark-comment:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Download benchmark results
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "benchmark-results"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/benchmark-results.zip`, Buffer.from(download.data));
      - name: Unzip benchmark results
        run: unzip benchmark-results.zip

      - name: Compare benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: JMH Benchmarks
          tool: 'jmh'
          output-file-path: benchmark-results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Do not fail the build, just comment on the PR.
          fail-on-alert: false

      - name: Post benchmark page link
        if: github.event.workflow_run.event == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          body: |
            ðŸ“Š **Benchmark Results**

            The detailed benchmark results are available for review on our website.

            [View Benchmark Report](https://g.omg.lol/poi.scala/dev/bench/)
